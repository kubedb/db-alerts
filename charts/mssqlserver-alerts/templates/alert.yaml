{{ $app := (include "mssqlserver-alerts.fullname" .) }}

{{ if (include "mssqlserver-alerts.alertsEnabled" .Values.form.alert.enabled) }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ $app }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "mssqlserver-alerts.labels" . | nindent 4 }}
{{- if .Values.form.alert.labels }}
    {{- toYaml .Values.form.alert.labels | nindent 4 }}
{{- end }}
{{- if .Values.form.alert.annotations }}
  annotations:
    {{- toYaml .Values.form.alert.annotations | nindent 4 }}
{{- end }}
spec:
  groups:
  {{ with .Values.form.alert.groups.database -}}
  {{ if (include "mssqlserver-alerts.alertGroupEnabled" (list $.Values.form.alert.enabled .)) -}}
  - name: mssqlserver.database.{{ $.Release.Namespace }}.{{ $app }}.rules
    rules:
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.mssqlserverInstanceDown.enabled .rules.mssqlserverInstanceDown.severity)) -}}
    - alert: MSSQLServerDown
      expr: pg_up{job="{{- $app -}}-stats",namespace="{{ $.Release.Namespace }}"} == 0
      for: {{ .rules.mssqlserverInstanceDown.duration }}
      labels:
        severity: {{ .rules.mssqlserverInstanceDown.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServer instance down (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "MSSQLServer instance is down on {{`{{`}} $labels.pod {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.mssqlserverSplitBrain.enabled .rules.mssqlserverSplitBrain.severity)) -}}
    - alert: MSSQLServerSplitBrain
      expr: count(pg_replication_is_replica{job="{{- $app -}}-stats",namespace="{{ $.Release.Namespace }}"} == 0) != 1
      for: {{ .rules.mssqlserverSplitBrain.duration }}
      labels:
        severity: {{ .rules.mssqlserverSplitBrain.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServer split brain (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "Split Brain, too many primary MSSQLServer databases in read-write mode\n  {{`{{`}} $labels.pod {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.mssqlserverTooManyLocksAcquired.enabled .rules.mssqlserverTooManyLocksAcquired.severity)) -}}
    - alert: MSSQLServerTooManyLocksAcquired
      expr: ((sum by (pod) (pg_locks_count{job="{{- $app -}}-stats",namespace="{{ $.Release.Namespace }}"}) ) / ( sum by (pod) (pg_settings_max_locks_per_transaction{job="{{- $app -}}-stats",namespace="{{ $.Release.Namespace }}"}) * sum by (pod) (pg_settings_max_connections{job="{{- $app -}}-stats",namespace="{{ $.Release.Namespace }}"}))) > {{.rules.mssqlserverTooManyLocksAcquired.val}}
      for: {{ .rules.mssqlserverTooManyLocksAcquired.duration }}
      labels:
        severity: {{ .rules.mssqlserverTooManyLocksAcquired.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServer too many locks acquired (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "Too many locks acquired on the database. \n  If this alert happens frequently, we may need to increase the mssqlserver setting max_locks_per_transaction.\n  {{`{{`}} $labels.pod {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.mssqlserverRestarted.enabled .rules.mssqlserverRestarted.severity)) -}}
    - alert: MSSQLServerRestarted
      expr: time() - pg_postmaster_start_time_seconds{job="{{- $app -}}-stats",namespace="{{ $.Release.Namespace }}"} < {{ .rules.mssqlserverRestarted.val }}
      for: {{ .rules.mssqlserverRestarted.duration }}
      labels:
        severity: {{ .rules.mssqlserverRestarted.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServer restarted (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "MSSQLServer restarted\n  {{`{{`}} $labels.pod {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.mssqlserverExporterError.enabled .rules.mssqlserverExporterError.severity)) -}}
    - alert: MSSQLServerExporterError
      expr: pg_exporter_last_scrape_error{job="{{- $app -}}-stats",namespace="{{ $.Release.Namespace }}"} > 0
      for: {{ .rules.mssqlserverExporterError.duration }}
      labels:
        severity: {{ .rules.mssqlserverExporterError.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServer exporter error (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "MSSQLServer exporter is showing errors. A query may be buggy in query.yaml\n  {{`{{`}} $labels.pod {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.mssqlserverHighRollbackRate.enabled .rules.mssqlserverHighRollbackRate.severity)) -}}
    - alert: MSSQLServerHighRollbackRate
      expr: rate(pg_stat_database_xact_rollback{job="{{- $app -}}-stats",namespace="{{ $.Release.Namespace }}"}[3m]) / rate(pg_stat_database_xact_commit{job="{{- $app -}}-stats",namespace="{{ $.Release.Namespace }}"}[3m]) > {{ .rules.mssqlserverHighRollbackRate.val }}
      for: {{ .rules.mssqlserverHighRollbackRate.duration }}
      labels:
        severity: {{ .rules.mssqlserverHighRollbackRate.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServer high rollback rate (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "Ratio of transactions being aborted compared to committed is hign. {{`{{`}} $labels.pod {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.mssqlserverTooManyConnections.enabled .rules.mssqlserverTooManyConnections.severity)) -}}
    - alert: MSSQLServerTooManyConnections
      expr: sum by (pod) (pg_stat_activity_count{job="{{- $app -}}-stats",namespace="{{ $.Release.Namespace }}"}) >= sum by (pod) (pg_settings_max_connections{job="{{- $app -}}-stats",namespace="{{ $.Release.Namespace }}"} * {{.rules.mssqlserverTooManyConnections.val}}) / 100
      for: {{ .rules.mssqlserverTooManyConnections.duration }}
      labels:
        severity: {{ .rules.mssqlserverTooManyConnections.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServer too many connections (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "MSSQLServer instance has too many connections . {{.rules.mssqlserverTooManyConnections.val}}% of MSSQLServer connections are in use on {{`{{`}} $labels.pod {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.diskUsageHigh.enabled .rules.diskUsageHigh.severity)) -}}
    - alert: DiskUsageHigh
      expr: (kubelet_volume_stats_used_bytes / on(persistentvolumeclaim) group_left(pod) (kubelet_volume_stats_capacity_bytes + on(persistentvolumeclaim) group_left(pod) kube_pod_spec_volumes_persistentvolumeclaims_info{pod=~\"{{ $.Release.Name }}-.+$\",namespace=~"{{ $.Release.Namespace }}"}) )
        * 100 > {{ .rules.diskUsageHigh.val }}
      for: {{ .rules.diskUsageHigh.duration }}
      labels:
        severity: {{ .rules.diskUsageHigh.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: Persistent Volume Usages in instance {{`{{`}} $labels.instance {{`}}`}}
        description: "Persistent Volume Usages\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.diskAlmostFull.enabled .rules.diskAlmostFull.severity)) -}}
    - alert: DiskAlmostFull
      expr: (kubelet_volume_stats_used_bytes / on(persistentvolumeclaim) group_left(pod) (kubelet_volume_stats_capacity_bytes + on(persistentvolumeclaim) group_left(pod) kube_pod_spec_volumes_persistentvolumeclaims_info{pod=~\"{{ $.Release.Name }}-.+$\",namespace=~"{{ $.Release.Namespace }}"}) )
        * 100 > {{ .rules.diskAlmostFull.val }}
      for: {{ .rules.diskAlmostFull.duration }}
      labels:
        severity: {{ .rules.diskAlmostFull.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: Persistent Volume Usages in instance {{`{{`}} $labels.instance {{`}}`}}
        description: "Persistent Volume Usages\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{ end -}}
  {{ end -}}


  {{ with .Values.form.alert.groups.provisioner -}}
  {{ if (include "mssqlserver-alerts.alertGroupEnabled" (list $.Values.form.alert.enabled .)) -}}
  - name: mssqlserver.provisioner.{{ $.Release.Namespace }}.{{ $app }}.rules
    rules:
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.appPhaseNotReady.enabled .rules.appPhaseNotReady.severity)) -}}
    - alert: KubeDBMSSQLServerPhaseNotReady
      expr: kubedb_com_mssqlserver_status_phase{phase="NotReady",app="{{ $app }}",namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.appPhaseNotReady.duration }}
      labels:
        severity: {{ .rules.appPhaseNotReady.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: KubeDB MSSQLServer Phase NotReady (mssqlserver {{`{{`}} $labels.mssqlserver {{`}}`}})
        description: "KubeDB MSSQLServer Phase not ready on {{`{{`}} $labels.mssqlserver {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.appPhaseCritical.enabled .rules.appPhaseCritical.severity)) -}}
    - alert: KubeDBMSSQLServerPhaseCritical
      expr: kubedb_com_mssqlserver_status_phase{phase="Critical",app="{{ $app }}",namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.appPhaseCritical.duration }}
      labels:
        severity: {{ .rules.appPhaseCritical.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: KubeDB MSSQLServer Phase Critical (mssqlserver {{`{{`}} $labels.mssqlserver {{`}}`}})
        description: "KubeDB MSSQLServer Phase Critical {{`{{`}} $labels.mssqlserver {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{ end -}}
  {{ end -}}


  {{ with .Values.form.alert.groups.opsManager -}}
  {{ if (include "mssqlserver-alerts.alertGroupEnabled" (list $.Values.form.alert.enabled .)) -}}
  - name: mssqlserver.opsManager.{{ $.Release.Namespace }}.{{ $app }}.rules
    rules:
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.opsRequestOnProgress.enabled .rules.opsRequestOnProgress.severity)) -}}
    - alert: KubeDBMSSQLServerOpsRequestOnProgress
      expr: ops_kubedb_com_mssqlserveropsrequest_status_phase{phase="Progressing",app="{{ $app }}",namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.opsRequestOnProgress.duration }}
      labels:
        severity: {{ .rules.opsRequestOnProgress.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServerOpsRequest on progress (mssqlserveropsrequest {{`{{`}} $labels.mssqlserveropsrequest {{`}}`}})
        description: "MSSQLServerOpsRequest {{`{{`}} $labels.mssqlserveropsrequest {{`}}`}} is in progressressing status\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.opsRequestStatusProgressingToLong.enabled .rules.opsRequestStatusProgressingToLong.severity)) -}}
    - alert: KubeDBMSSQLServerOpsRequestStatusProgressingToLong
      expr: ops_kubedb_com_mssqlserveropsrequest_status_phase{phase="Progressing",app="{{ $app }}",namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.opsRequestStatusProgressingToLong.duration }}
      labels:
        severity: {{ .rules.opsRequestStatusProgressingToLong.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServerOpsRequest is in progressing status for too long (mssqlserveropsrequest {{`{{`}} $labels.mssqlserveropsrequest {{`}}`}})
        description: "MSSQLServerOpsRequest {{`{{`}} $labels.mssqlserveropsrequest {{`}}`}} is in progressing status for too long\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.opsRequestFailed.enabled .rules.opsRequestFailed.severity)) -}}
    - alert: KubeDBMSSQLServerOpsRequestFailed
      expr: ops_kubedb_com_mssqlserveropsrequest_status_phase{phase="Failed",app="{{ $app }}",namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.opsRequestFailed.duration }}
      labels:
        severity: {{ .rules.opsRequestFailed.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServerOpsRequest failed (mssqlserveropsrequest {{`{{`}} $labels.mssqlserveropsrequest {{`}}`}})
        description: "MSSQLServerOpsRequest {{`{{`}} $labels.mssqlserveropsrequest {{`}}`}} failed \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{ end -}}
  {{ end -}}


  {{ with .Values.form.alert.groups.stash -}}
  {{ if (include "mssqlserver-alerts.alertGroupEnabled" (list $.Values.form.alert.enabled .)) -}}
  - name: mssqlserver.stash.{{ $.Release.Namespace }}.{{ $app }}.rules
    rules:
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.backupSessionFailed.enabled .rules.backupSessionFailed.severity)) -}}
    - alert: MSSQLServerStashBackupSessionFailed
      expr: stash_backup_session_success * on(invoker_name, invoker_kind) group_left(target_name, target_kind) stash_appscode_com_backupconfiguration_info{target_name="{{ $app }}", target_kind="AppBinding", namespace="{{ $.Release.Namespace }}"} == 0
      for: {{ .rules.backupSessionFailed.duration }}
      labels:
        severity: {{ .rules.backupSessionFailed.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServer Stash backup session failed (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "MSSQLServer Stash backupsession failed {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.restoreSessionFailed.enabled .rules.restoreSessionFailed.severity)) -}}
    - alert: MSSQLServerStashRestoreSessionFailed
      expr: stash_restore_session_success * on(invoker_name, invoker_kind) group_left(target_name, target_kind) stash_appscode_com_restoresession_info{target_name="{{ $app }}", target_kind="AppBinding", namespace="{{ $.Release.Namespace }}"} == 0
      for: {{ .rules.restoreSessionFailed.duration }}
      labels:
        severity: {{ .rules.restoreSessionFailed.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServer Stash restore session failed (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "MSSQLServer Stash restore session failed {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.noBackupSessionForTooLong.enabled .rules.noBackupSessionForTooLong.severity)) -}}
    - alert: MSSQLServerStashNoBackupSessionForTooLong
      expr: time() - stash_backup_last_success_time_seconds + on(invoker_name, invoker_kind) group_left(target_name, target_kind) stash_appscode_com_backupconfiguration_info{target_name="{{ $app }}", target_kind="AppBinding", namespace="{{ $.Release.Namespace }}"} - 1 > {{ .rules.noBackupSessionForTooLong.val }}
      for: {{ .rules.noBackupSessionForTooLong.duration }}
      labels:
        severity: {{ .rules.noBackupSessionForTooLong.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServer Stash no backup for last {{ .rules.noBackupSessionForTooLong.val }} second (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "MSSQLServer Stash no backup for too long {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.repositoryCorrupted.enabled .rules.repositoryCorrupted.severity)) -}}
    - alert: MSSQLServerStashRepositoryCorrupted
      expr: stash_repository_integrity * on(invoker_name, invoker_kind) group_left(target_name, target_kind, repository) stash_appscode_com_backupconfiguration_info{target_name="{{ $app }}", target_kind="AppBinding", namespace="{{ $.Release.Namespace }}"}
      for: {{ .rules.repositoryCorrupted.duration }}
      labels:
        severity: {{ .rules.repositoryCorrupted.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServer Stash repository corrupted (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "MSSQLServer Stash repository corrupted {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.repositoryStorageRunningLow.enabled .rules.repositoryStorageRunningLow.severity)) -}}
    - alert: MSSQLServerStashRepositoryStorageRunningLow
      expr: stash_repository_size_bytes * on(invoker_name, invoker_kind) group_left(target_name, target_kind, repository) stash_appscode_com_backupconfiguration_info{target_name="{{ $app }}", target_kind="AppBinding", namespace="{{ $.Release.Namespace }}"} > {{ .rules.repositoryStorageRunningLow.val }}
      for: {{ .rules.repositoryStorageRunningLow.duration }}
      labels:
        severity: {{ .rules.repositoryStorageRunningLow.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServer Stash Repository storage more than {{ .rules.repositoryStorageRunningLow.val }} byte. (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "MSSQLServer Stash Repository storage running low {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.backupSessionPeriodTooLong.enabled .rules.backupSessionPeriodTooLong.severity)) -}}
    - alert: MSSQLServerStashBackupSessionPeriodTooLong
      expr: stash_backup_session_duration_seconds * on(invoker_name, invoker_kind) group_left(target_name, target_kind, repository) stash_appscode_com_backupconfiguration_info{target_name="{{ $app }}", target_kind="AppBinding", namespace="{{ $.Release.Namespace }}"} > {{ .rules.backupSessionPeriodTooLong.val }}
      for: {{ .rules.backupSessionPeriodTooLong.duration }}
      labels:
        severity: {{ .rules.backupSessionPeriodTooLong.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary:  MSSQLServer Stash backup session took more than {{ .rules.backupSessionPeriodTooLong.val }} second to complete. (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "MSSQLServer Stash backup session taking to long to complete {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.restoreSessionPeriodTooLong.enabled .rules.restoreSessionPeriodTooLong.severity)) -}}
    - alert: MSSQLServerStashRestoreSessionPeriodTooLong
      expr: stash_restore_session_duration_seconds * on(invoker_name, invoker_kind) group_left(target_name, target_kind, repository) stash_appscode_com_restoresession_info{target_name="{{ $app }}", target_kind="AppBinding", namespace="{{ $.Release.Namespace }}"} > {{ .rules.restoreSessionPeriodTooLong.val }}
      for: {{ .rules.restoreSessionPeriodTooLong.duration }}
      labels:
        severity: {{ .rules.restoreSessionPeriodTooLong.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary:  MSSQLServer Stash restore session took more than {{ .rules.restoreSessionPeriodTooLong.val }} second to complete. (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "MSSQLServer Stash restore session taking to long to complete {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{ end -}}
  {{ end -}}


  {{ with .Values.form.alert.groups.kubeStash -}}
  {{ if (include "mssqlserver-alerts.alertGroupEnabled" (list $.Values.form.alert.enabled .)) -}}
  - name: mssqlserver.kubeStash.{{ $.Release.Namespace }}.{{ $app }}.rules
    rules:
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.backupSessionFailed.enabled .rules.backupSessionFailed.severity)) -}}
    - alert: MSSQLServerKubeStashBackupSessionFailed
      expr: core_kubestash_com_backupsession_phase{phase="Failed"} * on(backup_invoker_kind, backup_invoker_name) group_left(target_kind, target_name, target_namespace) core_kubestash_com_backupconfiguration_info{target_kind="MSSQLServer", target_name="{{ $app }}", target_namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.backupSessionFailed.duration }}
      labels:
        severity: {{ .rules.backupSessionFailed.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServer KubeStash backup session failed (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "MSSQLServer KubeStash backupsession failed {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.restoreSessionFailed.enabled .rules.restoreSessionFailed.severity)) -}}
    - alert: MSSQLServerKubeStashRestoreSessionFailed
      expr: core_kubestash_com_restoresession_phase{target_kind="MSSQLServer", target_name="{{ $app }}", target_namespace="{{ $.Release.Namespace }}", phase="Failed"} == 1
      for: {{ .rules.restoreSessionFailed.duration }}
      labels:
        severity: {{ .rules.restoreSessionFailed.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServer KubeStash restore session failed (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "MSSQLServer KubeStash restore session failed {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.noBackupSessionForTooLong.enabled .rules.noBackupSessionForTooLong.severity)) -}}
    - alert: MSSQLServerKubeStashNoBackupSessionForTooLong
      expr: time() - max(core_kubestash_com_backupsession_created * on(backup_invoker_kind, backup_invoker_name) group_left(target_kind, target_name, target_namespace) core_kubestash_com_backupconfiguration_info{target_kind="MSSQLServer", target_name="{{ $app }}", target_namespace="{{ $.Release.Namespace }}"}) > {{ .rules.noBackupSessionForTooLong.val }}
      for: {{ .rules.noBackupSessionForTooLong.duration }}
      labels:
        severity: {{ .rules.noBackupSessionForTooLong.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServer KubeStash no backup for last {{ .rules.noBackupSessionForTooLong.val }} second (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "MSSQLServer KubeStash no backup for too long {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.repositoryCorrupted.enabled .rules.repositoryCorrupted.severity)) -}}
    - alert: MSSQLServerKubeStashRepositoryCorrupted
      expr: storage_kubestash_com_repository_info{target_kind="MSSQLServer", target_name="{{ $app }}", target_namespace="{{ $.Release.Namespace }}", integrity="false"} == 1
      for: {{ .rules.repositoryCorrupted.duration }}
      labels:
        severity: {{ .rules.repositoryCorrupted.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServer KubeStash repository corrupted (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "MSSQLServer KubeStash repository corrupted {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.repositoryStorageRunningLow.enabled .rules.repositoryStorageRunningLow.severity)) -}}
    - alert: MSSQLServerKubeStashRepositoryStorageRunningLow
      expr: storage_kubestash_com_repository_size_bytes{target_kind="MSSQLServer", target_name="{{ $app }}", target_namespace="{{ $.Release.Namespace }}"} > {{ .rules.repositoryStorageRunningLow.val }}
      for: {{ .rules.repositoryStorageRunningLow.duration }}
      labels:
        severity: {{ .rules.repositoryStorageRunningLow.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServer KubeStash Repository storage more than {{ .rules.repositoryStorageRunningLow.val }} byte. (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "MSSQLServer KubeStash Repository storage running low {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.backupSessionPeriodTooLong.enabled .rules.backupSessionPeriodTooLong.severity)) -}}
    - alert: MSSQLServerKubeStashBackupSessionPeriodTooLong
      expr: core_kubestash_com_backupsession_duration_seconds * on(backup_invoker_kind, backup_invoker_name) group_left(target_kind, target_name, target_namespace) core_kubestash_com_backupconfiguration_info{target_kind="MSSQLServer", target_name="{{ $app }}", target_namespace="{{ $.Release.Namespace }}"} > {{ .rules.backupSessionPeriodTooLong.val }}
      for: {{ .rules.backupSessionPeriodTooLong.duration }}
      labels:
        severity: {{ .rules.backupSessionPeriodTooLong.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary:  MSSQLServer KubeStash backup session took more than {{ .rules.backupSessionPeriodTooLong.val }} second to complete. (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "MSSQLServer KubeStash backup session taking to long to complete {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.restoreSessionPeriodTooLong.enabled .rules.restoreSessionPeriodTooLong.severity)) -}}
    - alert: MSSQLServerKubeStashRestoreSessionPeriodTooLong
      expr: core_kubestash_com_restoresession_duration_seconds{target_kind="MSSQLServer", target_name="{{ $app }}", target_namespace="{{ $.Release.Namespace }}"} > {{ .rules.restoreSessionPeriodTooLong.val }}
      for: {{ .rules.restoreSessionPeriodTooLong.duration }}
      labels:
        severity: {{ .rules.restoreSessionPeriodTooLong.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary:  MSSQLServer KubeStash restore session took more than {{ .rules.restoreSessionPeriodTooLong.val }} second to complete. (invoker_name {{`{{`}} $labels.invoker_name {{`}}`}})
        description: "MSSQLServer KubeStash restore session taking to long to complete {{`{{`}} $labels.invoker_name {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{ end -}}
  {{ end -}}


  {{ with .Values.form.alert.groups.schemaManager -}}
  {{ if (include "mssqlserver-alerts.alertGroupEnabled" (list $.Values.form.alert.enabled .)) -}}
  - name: mssqlserver.schemaManager.{{ $.Release.Namespace }}.{{ $app }}.rules
    rules:
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.schemaPendingForTooLong.enabled .rules.schemaPendingForTooLong.severity)) -}}
    - alert: KubeDBMSSQLServerSchemaPendingForTooLong
      expr: schema_kubedb_com_mssqlserverdatabase_status_phase{phase="Pending",app="{{ $app }}",app_namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.schemaPendingForTooLong.duration }}
      labels:
        severity: {{ .rules.schemaPendingForTooLong.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: KubeDB schema pending for too long for (mssqlserverdatabase {{`{{`}} $labels.mssqlserverdatabase {{`}}`}})
        description: "KubeDB schema pending for too long.\n {{`{{`}} $labels.mssqlserverdatabase {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.schemaInProgressForTooLong.enabled .rules.schemaInProgressForTooLong.severity)) -}}
    - alert: KubeDBMSSQLServerSchemaInProgressForTooLong
      expr: schema_kubedb_com_mssqlserverdatabase_status_phase{phase="InProgress",app="{{ $app }}",app_namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.schemaInProgressForTooLong.duration }}
      labels:
        severity: {{ .rules.schemaInProgressForTooLong.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: KubeDB schema is in progress for too long for (mssqlserverdatabase {{`{{`}} $labels.mssqlserverdatabase {{`}}`}})
        description: "KubeDB schema is in progress for too long.\n {{`{{`}} $labels.mssqlserverdatabase {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.schemaTerminatingForTooLong.enabled .rules.schemaTerminatingForTooLong.severity)) -}}
    - alert: KubeDBMSSQLServerSchemaTerminatingForTooLong
      expr: schema_kubedb_com_mssqlserverdatabase_status_phase{phase="Terminating",app="{{ $app }}",app_namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.schemaTerminatingForTooLong.duration }}
      labels:
        severity: {{ .rules.schemaTerminatingForTooLong.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: KubeDB schema terminating for too long for (mssqlserverdatabase {{`{{`}} $labels.mssqlserverdatabase {{`}}`}})
        description: "KubeDB schema terminating for too long.\n {{`{{`}} $labels.mssqlserverdatabase {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.schemaFailed.enabled .rules.schemaFailed.severity)) -}}
    - alert: KubeDBMSSQLServerSchemaFailed
      expr: schema_kubedb_com_mssqlserverdatabase_status_phase{phase="Failed",app="{{ $app }}",app_namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.schemaFailed.duration }}
      labels:
        severity: {{ .rules.schemaFailed.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: KubeDB schema failed for (mssqlserverdatabase {{`{{`}} $labels.mssqlserverdatabase {{`}}`}})
        description: "KubeDB schema failed.\n {{`{{`}} $labels.mssqlserverdatabase {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.schemaExpired.enabled .rules.schemaExpired.severity)) -}}
    - alert: KubeDBMSSQLServerSchemaExpired
      expr: schema_kubedb_com_mssqlserverdatabase_status_phase{phase="Expired",app="{{ $app }}",app_namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.schemaExpired.duration }}
      labels:
        severity: {{ .rules.schemaExpired.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: KubeDB schema expired for (mssqlserverdatabase {{`{{`}} $labels.mssqlserverdatabase {{`}}`}})
        description: "KubeDB schema expired.\n {{`{{`}} $labels.mssqlserverdatabase {{`}}`}} \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{ end -}}
  {{ end -}}

{{ end }}
