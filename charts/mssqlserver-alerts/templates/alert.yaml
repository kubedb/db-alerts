{{ $app := (include "mssqlserver-alerts.fullname" .) }}

{{ if (include "mssqlserver-alerts.alertsEnabled" .Values.form.alert.enabled) }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ $app }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "mssqlserver-alerts.labels" . | nindent 4 }}
{{- if .Values.form.alert.labels }}
    {{- toYaml .Values.form.alert.labels | nindent 4 }}
{{- end }}
{{- if .Values.form.alert.annotations }}
  annotations:
    {{- toYaml .Values.form.alert.annotations | nindent 4 }}
{{- end }}
spec:
  groups:
  {{ with .Values.form.alert.groups.database -}}
  {{ if (include "mssqlserver-alerts.alertGroupEnabled" (list $.Values.form.alert.enabled .)) -}}
  - name: mssqlserver.database.{{ $.Release.Namespace }}.{{ $app }}.rules
    rules:
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.mssqlserverInstanceDown.enabled .rules.mssqlserverInstanceDown.severity)) -}}
    - alert: MSSQLServerInstanceDown
      expr: up{job="{{- $app -}}-stats",namespace="{{ $.Release.Namespace }}"} == 0
      for: {{ .rules.mssqlserverInstanceDown.duration }}
      labels:
        severity: {{ .rules.mssqlserverInstanceDown.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServer instance down (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "MSSQLServer instance is down on {{`{{`}} $labels.pod {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.mssqlserverServiceDown.enabled .rules.mssqlserverServiceDown.severity)) -}}
    - alert: MSSQLServerServiceDown
      expr: sum by (service) (up{job="{{ $app }}-stats",namespace="{{ $.Release.Namespace }}"}) == 0
      for: {{ .rules.mssqlserverServiceDown.duration }}
      labels:
        severity: {{ .rules.mssqlserverServiceDown.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServer service down (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "MSSQLServer service is down on {{`{{`}} $labels.pod {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.mssqlserverRestarted.enabled .rules.mssqlserverRestarted.severity)) -}}
    - alert: MSSQLServerRestarted
      expr: mssql_uptime_seconds{job="{{- $app -}}-stats",namespace="{{ $.Release.Namespace }}"} < {{ .rules.mssqlserverRestarted.val }}
      for: {{ .rules.mssqlserverRestarted.duration }}
      labels:
        severity: {{ .rules.mssqlserverRestarted.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServer restarted (instance {{`{{`}} $labels.pod {{`}}`}})
        description: "MSSQLServer restarted\n  {{`{{`}} $labels.pod {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.diskUsageHigh.enabled .rules.diskUsageHigh.severity)) -}}
    - alert: DiskUsageHigh
      expr: |
        (kubelet_volume_stats_used_bytes{job=~"kubelet"} / on(persistentvolumeclaim) group_left(pod) (
          kubelet_volume_stats_capacity_bytes{job=~"kubelet"} + on(persistentvolumeclaim) group_left(pod)
          kube_pod_spec_volumes_persistentvolumeclaims_info{pod=~"{{ $.Release.Name }}-.+$", namespace=~"{{ $.Release.Namespace }}"}
        )) * 100 > {{ .rules.diskUsageHigh.val }}
      for: {{ .rules.diskUsageHigh.duration }}
      labels:
        severity: {{ .rules.diskUsageHigh.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: Persistent Volume Usages in instance {{`{{`}} $labels.instance {{`}}`}}
        description: "Persistent Volume Usages\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.diskAlmostFull.enabled .rules.diskAlmostFull.severity)) -}}
    - alert: DiskAlmostFull
      expr: |
        (kubelet_volume_stats_used_bytes{job=~"kubelet"} / on(persistentvolumeclaim) group_left(pod) (
        kubelet_volume_stats_capacity_bytes{job=~"kubelet"} + on(persistentvolumeclaim) group_left(pod)
        kube_pod_spec_volumes_persistentvolumeclaims_info{pod=~"{{ $.Release.Name }}-.+$", namespace=~"{{ $.Release.Namespace }}"}
        )) * 100 > {{ .rules.diskAlmostFull.val }}
      for: {{ .rules.diskAlmostFull.duration }}
      labels:
        severity: {{ .rules.diskAlmostFull.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: Persistent Volume Usages in instance {{`{{`}} $labels.instance {{`}}`}}
        description: "Persistent Volume Usages\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{ end -}}
  {{ end -}}


  {{ with .Values.form.alert.groups.provisioner -}}
  {{ if (include "mssqlserver-alerts.alertGroupEnabled" (list $.Values.form.alert.enabled .)) -}}
  - name: mssqlserver.provisioner.{{ $.Release.Namespace }}.{{ $app }}.rules
    rules:
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.appPhaseNotReady.enabled .rules.appPhaseNotReady.severity)) -}}
    - alert: KubeDBMSSQLServerPhaseNotReady
      expr: kubedb_com_mssqlserver_status_phase{phase="NotReady",app="{{ $app }}",namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.appPhaseNotReady.duration }}
      labels:
        severity: {{ .rules.appPhaseNotReady.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: KubeDB MSSQLServer Phase NotReady (mssqlserver {{`{{`}} $labels.mssqlserver {{`}}`}})
        description: "KubeDB MSSQLServer Phase not ready on {{`{{`}} $labels.mssqlserver {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.appPhaseCritical.enabled .rules.appPhaseCritical.severity)) -}}
    - alert: KubeDBMSSQLServerPhaseCritical
      expr: kubedb_com_mssqlserver_status_phase{phase="Critical",app="{{ $app }}",namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.appPhaseCritical.duration }}
      labels:
        severity: {{ .rules.appPhaseCritical.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: KubeDB MSSQLServer Phase Critical (mssqlserver {{`{{`}} $labels.mssqlserver {{`}}`}})
        description: "KubeDB MSSQLServer Phase Critical {{`{{`}} $labels.mssqlserver {{`}}`}}\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{ end -}}
  {{ end -}}


  {{ with .Values.form.alert.groups.opsManager -}}
  {{ if (include "mssqlserver-alerts.alertGroupEnabled" (list $.Values.form.alert.enabled .)) -}}
  - name: mssqlserver.opsManager.{{ $.Release.Namespace }}.{{ $app }}.rules
    rules:
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.opsRequestOnProgress.enabled .rules.opsRequestOnProgress.severity)) -}}
    - alert: KubeDBMSSQLServerOpsRequestOnProgress
      expr: ops_kubedb_com_mssqlserveropsrequest_status_phase{phase="Progressing",app="{{ $app }}",namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.opsRequestOnProgress.duration }}
      labels:
        severity: {{ .rules.opsRequestOnProgress.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServerOpsRequest on progress (mssqlserveropsrequest {{`{{`}} $labels.mssqlserveropsrequest {{`}}`}})
        description: "MSSQLServerOpsRequest {{`{{`}} $labels.mssqlserveropsrequest {{`}}`}} is in progressressing status\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.opsRequestStatusProgressingToLong.enabled .rules.opsRequestStatusProgressingToLong.severity)) -}}
    - alert: KubeDBMSSQLServerOpsRequestStatusProgressingToLong
      expr: ops_kubedb_com_mssqlserveropsrequest_status_phase{phase="Progressing",app="{{ $app }}",namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.opsRequestStatusProgressingToLong.duration }}
      labels:
        severity: {{ .rules.opsRequestStatusProgressingToLong.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServerOpsRequest is in progressing status for too long (mssqlserveropsrequest {{`{{`}} $labels.mssqlserveropsrequest {{`}}`}})
        description: "MSSQLServerOpsRequest {{`{{`}} $labels.mssqlserveropsrequest {{`}}`}} is in progressing status for too long\n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{ end -}}
    {{ if (include "mssqlserver-alerts.alertEnabled" (list $.Values.form.alert.enabled .enabled .rules.opsRequestFailed.enabled .rules.opsRequestFailed.severity)) -}}
    - alert: KubeDBMSSQLServerOpsRequestFailed
      expr: ops_kubedb_com_mssqlserveropsrequest_status_phase{phase="Failed",app="{{ $app }}",namespace="{{ $.Release.Namespace }}"} == 1
      for: {{ .rules.opsRequestFailed.duration }}
      labels:
        severity: {{ .rules.opsRequestFailed.severity }}
        {{- include "mssqlserver-alerts.alertLabels" $ | nindent 8 }}
      annotations:
        summary: MSSQLServerOpsRequest failed (mssqlserveropsrequest {{`{{`}} $labels.mssqlserveropsrequest {{`}}`}})
        description: "MSSQLServerOpsRequest {{`{{`}} $labels.mssqlserveropsrequest {{`}}`}} failed \n  VALUE = {{`{{`}} $value {{`}}`}}\n  LABELS = {{`{{`}} $labels {{`}}`}}"
    {{- end }}
  {{ end -}}
  {{ end -}}
{{ end }}